#include <stdio.h>
#include<stdlib.h>
int insert(int *arr,int n)
{
    int i,pos,e;
    printf("Enter the element you want to insert:");
    scanf("%d",&e);
    printf("Enter the position you want to insert:");
    scanf("%d",&pos);
    for(i=n;i>=pos;i--)
    {
        arr[i+1]=arr[i];
    }
    arr[pos]=e;
    n=n+1;
    return n;
}
int delete_element(int *arr,int n)
{
    int i, pos;
    printf("Enter the position you want to delete:");
    scanf("%d",&pos);
    for(i=pos;i<n-1;i++)
    {
        arr[i]=arr[i+1];
    }
}
void display(int *arr,int n)
{
    printf("The Elements of array are:");
    for(int i=0;i<n;i++)
    {
        printf("%d ",arr[i]);
    }
}
void update(int *arr,int n)
{
    int e,pos;
    printf("Enter the postion you want to update:");
    scanf("%d",&pos);
    printf("Enter the element you want to insert:");
    scanf("%d",&e);
    arr[pos]=e;
}
void search(int *arr,int n)
{
    int e,i,flag=0;
    printf("Enter the element you want to search:");
    scanf("%d",&e);
    for(i=0;i<n;i++)
    {
        if(arr[i]==e)
        {
            printf("%d found at %d position\n",e,i);
            flag=1;
            break;
        }
    }
    if(flag==0)
    {
        printf("%d is not present in the array\n",e);
    }
}
int main() 
{
    int n,arr[10],i,choice;
    printf("Enter the size of the array:");
    scanf("%d",&n);
    printf("Enter the elements of the array:");
    for(i=0;i<n;i++)
    {
        printf("\nEnter element A[%d]:",i);
        scanf("%d",&arr[i]);
    }
    while(1){
    printf("\n---------------------------------------\n");
    printf("1.Insert Element\n2.Delete Element\n3.Display Array\n4.Update Array\n5.Search\n6.Exit\nEnter you choice:\n");
    scanf("%d",&choice);
    switch(choice)
    {
        case 1:n=insert(arr,n);
               break;
        case 2:n=delete_element(arr,n);
               break;
        case 3:display(arr,n);
               break;
        case 4:update(arr,n);
               break;
        case 5:search(arr,n);
               break;
        case 6:exit(0);
        default:printf("\nEnter a Valid Choice!!\n");
    }
    }
    return 0;
}